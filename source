_G.MyLib = {}



--[[


	Tween Services - idk who made


]]



local TweenService = game:GetService("TweenService")



function TweenSize(Object, Property)


	local Tween = TweenService:Create(Object, TweenInfo.new(Property["Time"]), {Size = Property["Size"]}):Play()



	return Tween


end



function TweenTextTransparency(Object, Property)


	local Tween = TweenService:Create(Object, TweenInfo.new(Property["Time"]), {TextTransparency = Property["Transparency"]}):Play()



	return Tween


end



function TweenBackgroundTransparency(Object, Property)


	local Tween = TweenService:Create(Object, TweenInfo.new(Property["Time"]), {BackgroundTransparency = Property["Transparency"]}):Play()



	return Tween


end



function TweenBackgroundColor(Object, Property)


	local Tween = TweenService:Create(Object, TweenInfo.new(Property["Time"]), {BackgroundColor3 = Property["Color"]}):Play()



	return Tween


end



function TweenTextColor(Object, Property)


	local Tween = TweenService:Create(Object, TweenInfo.new(Property["Time"]), {TextColor3 = Property["Color"]}):Play()



	return Tween


end



function TweenPosition(Object, Property)


	local Tween = TweenService:Create(Object, TweenInfo.new(Property["Time"]), {Position = Property["Position"]}):Play()



	return Tween


end



--[[


	Rest of code (basically) uncommented


]]




local Notification = Instance.new("Frame")


local Notification_Frame = Instance.new("Frame")


local UICorner = Instance.new("UICorner")


local Title = Instance.new("TextLabel")


local UICorner_2 = Instance.new("UICorner")


local Text = Instance.new("TextLabel")


local BG = Instance.new("TextLabel")


local UICorner_3 = Instance.new("UICorner")


local CloseNoti = Instance.new("TextButton")



Notification.Name = "Notification"


Notification.Parent = game.StarterGui.ArcNotificationsTest.ArcNotificationFrame


Notification.BackgroundColor3 = Color3.fromRGB(56, 56, 56)


Notification.BackgroundTransparency = 1.000


Notification.Position = UDim2.new(0.0909999982, 0, 0.821791947, 0)


Notification.Size = UDim2.new(0, 225, 0, 144)



Notification_Frame.Name = "Notification_Frame"


Notification_Frame.Parent = Notification


Notification_Frame.BackgroundColor3 = Color3.fromRGB(56, 56, 56)


Notification_Frame.Size = UDim2.new(0, 225, 0, 144)



CloseNoti.Name = "CloseNoti"


CloseNoti.Parent = Notification_Frame


CloseNoti.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


CloseNoti.BackgroundTransparency = 1.000


CloseNoti.Size = UDim2.new(1, 0, 1, 0)


CloseNoti.Font = Enum.Font.SourceSans


CloseNoti.Text = ""


CloseNoti.TextColor3 = Color3.fromRGB(0, 0, 0)


CloseNoti.TextSize = 14.000



UICorner.CornerRadius = UDim.new(0, 25)


UICorner.Parent = Notification_Frame



Title.Name = "Title"


Title.Parent = Notification_Frame


Title.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


Title.Position = UDim2.new(0.0530002154, 0, 0, 10)


Title.Size = UDim2.new(0, 200, 0, 23)


Title.Font = Enum.Font.Gotham


Title.Text = "Title"


Title.TextColor3 = Color3.fromRGB(229, 229, 229)


Title.TextSize = 14.000



UICorner_2.CornerRadius = UDim.new(0, 25)


UICorner_2.Parent = Title



Text.Name = "Text"


Text.Parent = Notification_Frame


Text.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


Text.BackgroundTransparency = 1.000


Text.Position = UDim2.new(0.097444661, 0, 0.228927702, 10)


Text.Size = UDim2.new(0, 178, 0, 67)


Text.ZIndex = 3


Text.Font = Enum.Font.Gotham


Text.Text = "Notification Text"


Text.TextColor3 = Color3.fromRGB(229, 229, 229)


Text.TextSize = 14.000


Text.TextYAlignment = Enum.TextYAlignment.Top



BG.Name = "BG"


BG.Parent = Notification_Frame


BG.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


BG.Position = UDim2.new(0.0530002154, 0, 0.171428576, 10)


BG.Size = UDim2.new(0, 200, 0, 94)


BG.Font = Enum.Font.Gotham


BG.Text = ""


BG.TextColor3 = Color3.fromRGB(229, 229, 229)


BG.TextSize = 14.000


BG.TextXAlignment = Enum.TextXAlignment.Left


BG.TextYAlignment = Enum.TextYAlignment.Top



UICorner_3.CornerRadius = UDim.new(0, 25)


UICorner_3.Parent = BG



if not game:GetService('Players').LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild('ArcNotifications') then


	local ArcNotifications = Instance.new("ScreenGui")


	local ArcNotificationFrame = Instance.new("Frame")


	local UIListLayout = Instance.new("UIListLayout")



	ArcNotifications.Name = "ArcNotifications"


	ArcNotifications.Parent = game:GetService('Players').LocalPlayer:WaitForChild("PlayerGui")


	ArcNotifications.ZIndexBehavior = Enum.ZIndexBehavior.Sibling


	ArcNotifications.ResetOnSpawn = false



	ArcNotificationFrame.Name = "ArcNotificationFrame"


	ArcNotificationFrame.Parent = ArcNotifications


	ArcNotificationFrame.BackgroundTransparency = 1.000


	ArcNotificationFrame.Position = UDim2.new(0.824999988, 0, 0.0250000004, 0)


	ArcNotificationFrame.Size = UDim2.new(0, 275, 0.949999988, 0)



	UIListLayout.Parent = ArcNotificationFrame


	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center


	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder


	UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom


	UIListLayout.Padding = UDim.new(0, 5)


else


	NotificationFrame = game:GetService('Players').LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild('ArcNotifications')


end



function _G.MyLib:CreateWindow(windowparams)


	-- Make UI Code


	windowparams = windowparams or {}


	local title = windowparams.Title or 'Title'


	local subtitle = windowparams.SubTitle or 'SubTitle'


	local load = windowparams.LoadingScreen or true


	if load == true then


		local Loading = Instance.new("ScreenGui")


		local b = Instance.new("Frame")


		local Title = Instance.new("TextLabel")


		local UICornerTB = Instance.new("UICorner")


		local Subtitle = Instance.new("TextLabel")



		Loading.Name = "Loading"


		Loading.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")


		Loading.ZIndexBehavior = Enum.ZIndexBehavior.Sibling


		Loading.ResetOnSpawn = false



		b.Name = "TopBar"


		b.Parent = Loading


		b.BackgroundColor3 = Color3.fromRGB(56, 56, 56)


		b.BorderSizePixel = 0


		b.Position = UDim2.new(0.433428198, 0, 0.441666663, 0)


		b.Size = UDim2.new(0, 0, 0, 0)


		b.ClipsDescendants = true



		Title.Name = "Title"


		Title.Parent = b


		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


		Title.BackgroundTransparency = 1.000


		Title.BorderSizePixel = 0


		Title.Position = UDim2.new(0.139533922, 0, 0.202182621, -2)


		Title.Size = UDim2.new(0, 151, 0, 13)


		Title.Font = Enum.Font.Gotham


		Title.Text = title


		Title.TextColor3 = Color3.fromRGB(229, 229, 229)


		Title.TextSize = 25.000


		Title.TextStrokeColor3 = Color3.fromRGB(162, 162, 162)



		UICornerTB.CornerRadius = UDim.new(0, 15)


		UICornerTB.Name = "UICornerTB"


		UICornerTB.Parent = b



		Subtitle.Name = "Subtitle"


		Subtitle.Parent = b


		Subtitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


		Subtitle.BackgroundTransparency = 1.000


		Subtitle.BorderSizePixel = 0


		Subtitle.Position = UDim2.new(0.139533922, 0, 0.494525284, 0)


		Subtitle.Size = UDim2.new(0, 151, 0, 16)


		Subtitle.Font = Enum.Font.Gotham


		Subtitle.Text = subtitle


		Subtitle.TextColor3 = Color3.fromRGB(229, 229, 229)


		Subtitle.TextSize = 17.000


		Subtitle.TextStrokeColor3 = Color3.fromRGB(162, 162, 162)


		


		b:TweenSize(UDim2.new(0, 210, 0, 73), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 1)


		


		wait(5)


		


		b:Destroy()


		


	end


	


	for i, v in pairs(game:GetService('Players').LocalPlayer:WaitForChild("PlayerGui"):GetChildren()) do


		if v:IsA("ScreenGui") and v.Name == title..' Arc UI' then


			v:Destroy()


		end


	end



	local UI = Instance.new("ScreenGui")


	local Clipp = Instance.new("Frame")


	local UICornerC = Instance.new("UICorner")


	local TopBar = Instance.new("Frame")


	local Frameee = Instance.new("Frame")


	local UICornerF = Instance.new("UICorner")


	local BG = Instance.new("Frame")


	local SideBar = Instance.new("Frame")


	local UIListLayout = Instance.new("UIListLayout")


	local UICornerSB = Instance.new("UICorner")


	local Tabs = Instance.new("Frame")


	local UICornerBG = Instance.new("UICorner")


	local Roundfx = Instance.new("Folder")


	local BG_2 = Instance.new("Frame")


	local SideBar_2 = Instance.new("Frame")


	local SideBar_3 = Instance.new("Frame")


	local Title = Instance.new("TextLabel")


	local Minimize = Instance.new("TextButton")


	local Subtract = Instance.new("TextButton")


	local SubtractLabel = Instance.new("TextLabel")


	local MinimizeLabel = Instance.new("TextLabel")


	local UICornerTB_2 = Instance.new("UICorner")


	local x = Instance.new("Frame")


	local Subtitle = Instance.new("TextLabel")



	local TellUs


	local db = false



	UI.Name = title.." Arc UI"


	UI.Parent = game:GetService('Players').LocalPlayer:WaitForChild("PlayerGui")


	UI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling


	UI.ResetOnSpawn = false



	Clipp.Name = "Clipp"


	Clipp.Parent = UI


	Clipp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


	Clipp.BackgroundTransparency = 1.000


	Clipp.ClipsDescendants = true


	Clipp.Position = UDim2.new(0.25, 0,0.25, 0)


	Clipp.Size = UDim2.new(0, 210, 0, 73)



	TopBar.Name = "TopBar"


	TopBar.Parent = Clipp


	TopBar.BackgroundColor3 = Color3.fromRGB(56, 56, 56)


	TopBar.BorderSizePixel = 0


	TopBar.Size = UDim2.new(0, 473, 0, 39)


	TopBar.ZIndex = 8



	Frameee.Parent = TopBar


	Frameee.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


	Frameee.BackgroundTransparency = 1.000


	Frameee.Size = UDim2.new(0, 473, 0, 265)


	Frameee.ClipsDescendants = true



	UICornerC.CornerRadius = UDim.new(0, 25)


	UICornerC.Name = "UICornerC"


	UICornerC.Parent = Clipp


	


	UICornerF.CornerRadius = UDim.new(0, 25)


	UICornerF.Name = "UICornerF"


	UICornerF.Parent = Frameee



	BG.Name = "BG"


	BG.Parent = Frameee


	BG.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


	BG.BorderSizePixel = 0


	BG.ClipsDescendants = true


	BG.Position = UDim2.new(0, 0, 0.14, 0)


	BG.Size = UDim2.new(0, 473, 0, 200)



	SideBar.Name = "SideBar"


	SideBar.Parent = Roundfx


	SideBar.BackgroundColor3 = Color3.fromRGB(56, 56, 56)


	SideBar.BorderSizePixel = 0


	SideBar.ClipsDescendants = true


	SideBar.Position = UDim2.new(0.0634249449, 0, 0, 0)


	SideBar.Size = UDim2.new(0, 70, 0, 200)


	SideBar.ZIndex = -8



	UIListLayout.Parent = SideBar_3


	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center


	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder


	UIListLayout.Padding = UDim.new(0, 5)



	UICornerSB.CornerRadius = UDim.new(0, 25)


	UICornerSB.Name = "UICornerSB"


	UICornerSB.Parent = SideBar_3



	Tabs.Name = "Tabs"


	Tabs.Parent = BG


	Tabs.BackgroundColor3 = Color3.fromRGB(74, 74, 74)


	Tabs.BackgroundTransparency = 1.000


	Tabs.BorderSizePixel = 0


	Tabs.Position = UDim2.new(0.248275861, 0, 0.0353535339, 0)


	Tabs.Size = UDim2.new(0, 320, 0, 184)



	UICornerBG.CornerRadius = UDim.new(0, 25)


	UICornerBG.Name = "UICornerBG"


	UICornerBG.Parent = BG



	Roundfx.Name = "Roundfx"


	Roundfx.Parent = BG



	BG_2.Name = "BG"


	BG_2.Parent = Roundfx


	BG_2.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


	BG_2.BorderSizePixel = 0


	BG_2.ClipsDescendants = true


	BG_2.Size = UDim2.new(0, 473, 0, 113)


	BG_2.ZIndex = -8



	SideBar_2.Name = "SideBar"


	SideBar_2.Parent = Roundfx


	SideBar_2.BackgroundColor3 = Color3.fromRGB(56, 56, 56)


	SideBar_2.BorderSizePixel = 0


	SideBar_2.ClipsDescendants = true


	SideBar_2.Size = UDim2.new(0, 100, 0, 165)


	SideBar_2.ZIndex = -8



	SideBar_3.Name = "SideBar"


	SideBar_3.Parent = BG


	SideBar_3.BackgroundColor3 = Color3.fromRGB(56, 56, 56)


	SideBar_3.BorderSizePixel = 0


	SideBar_3.Size = UDim2.new(0, 100, 0, 200)



	Title.Name = "Title"


	Title.Parent = TopBar


	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


	Title.BackgroundTransparency = 1.000


	Title.BorderSizePixel = 0


	Title.Position = UDim2.new(0.0298850313, 0, 0, -2)


	Title.Text = title


	Title.Size = UDim2.new(0, 339, 0, 30)


	Title.Font = Enum.Font.Gotham


	Title.Text = title


	Title.TextColor3 = Color3.fromRGB(229, 229, 229)


	Title.TextSize = 17.000


	Title.TextStrokeColor3 = Color3.fromRGB(162, 162, 162)


	Title.TextXAlignment = Enum.TextXAlignment.Left


	Title.ZIndex = 9



	Minimize.Name = "Minimize"


	Minimize.Parent = TopBar


	Minimize.BackgroundColor3 = Color3.fromRGB(56, 56, 56)


	Minimize.BackgroundTransparency = 1.000


	Minimize.BorderSizePixel = 0


	Minimize.Position = UDim2.new(0.92413795, 0, 0, 0)


	Minimize.Size = UDim2.new(0, 33, 0, 33)


	Minimize.Font = Enum.Font.Gotham


	Minimize.Text = ""


	Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)


	Minimize.TextSize = 14.000


	


	_G.cTab = nil



	Subtract.Name = "Subtract"


	Subtract.Parent = TopBar


	Subtract.BackgroundColor3 = Color3.fromRGB(56, 56, 56)


	Subtract.BackgroundTransparency = 1.000


	Subtract.BorderSizePixel = 0


	Subtract.Position = UDim2.new(0.8482759, 0, 0, 0)


	Subtract.Size = UDim2.new(0, 33, 0, 33)


	Subtract.Font = Enum.Font.Gotham


	Subtract.Text = ""


	Subtract.TextColor3 = Color3.fromRGB(0, 0, 0)


	Subtract.TextSize = 48.000



	SubtractLabel.Name = "SubtractLabel"


	SubtractLabel.Parent = TopBar


	SubtractLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


	SubtractLabel.BackgroundTransparency = 1.000


	SubtractLabel.BorderSizePixel = 0


	SubtractLabel.Position = UDim2.new(0.850574851, 0, 0, 0)


	SubtractLabel.Size = UDim2.new(0, 32, 0, 33)


	SubtractLabel.Font = Enum.Font.Gotham


	SubtractLabel.Text = "-"


	SubtractLabel.TextColor3 = Color3.fromRGB(229, 229, 229)


	SubtractLabel.TextSize = 40.000



	MinimizeLabel.Name = "MinimizeLabel"


	MinimizeLabel.Parent = TopBar


	MinimizeLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


	MinimizeLabel.BackgroundTransparency = 1.000


	MinimizeLabel.BorderSizePixel = 0


	MinimizeLabel.Position = UDim2.new(0.92413795, 0, 0, 0)


	MinimizeLabel.Size = UDim2.new(0, 33, 0, 33)


	MinimizeLabel.Font = Enum.Font.GothamBold


	MinimizeLabel.Text = "X"


	MinimizeLabel.TextColor3 = Color3.fromRGB(229, 229, 229)


	MinimizeLabel.TextSize = 17.000



	UICornerTB_2.CornerRadius = UDim.new(0, 25)


	UICornerTB_2.Name = "UICornerTB"


	UICornerTB_2.Parent = TopBar



	x.Name = "x"


	x.Parent = Frameee


	x.BackgroundColor3 = Color3.fromRGB(56, 56, 56)


	x.BorderSizePixel = 0


	x.Position = UDim2.new(0, 0, 0.09000001, 0)


	x.Size = UDim2.new(0, 473, 0, 24)


	x.ZIndex = -3



	Subtitle.Name = "Subtitle"


	Subtitle.Parent = TopBar


	Subtitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


	Subtitle.BackgroundTransparency = 1.000


	Subtitle.BorderSizePixel = 0


	Subtitle.Position = UDim2.new(0.0298850313, 0, 0.24242425, 0)


	Subtitle.Size = UDim2.new(0, 339, 0, 36)


	Subtitle.Font = Enum.Font.Gotham


	Subtitle.Text = subtitle


	Subtitle.TextColor3 = Color3.fromRGB(229, 229, 229)


	Subtitle.TextSize = 11.000


	Subtitle.TextStrokeColor3 = Color3.fromRGB(162, 162, 162)


	Subtitle.TextXAlignment = Enum.TextXAlignment.Left


	Subtitle.ZIndex = 9


	


	Clipp:TweenSize(UDim2.new(0, 473, 0, 240), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1)



	local showing = true



	local function minimize()



		Clipp:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.In,Enum.EasingStyle.Sine,0.75)



		showing = false


		TellUs = Instance.new("Frame")


		local UICorner = Instance.new("UICorner")


		local Title = Instance.new("TextLabel")


		local UICorner_2 = Instance.new("UICorner")


		local Button = Instance.new("TextButton")


		local UICorner_3 = Instance.new("UICorner")



		TellUs.Name = "Tell Us"


		TellUs.Parent = UI


		TellUs.BackgroundColor3 = Color3.fromRGB(56, 56, 56)


		TellUs.Position = UDim2.new(0.785431504, 0, 0.848874569, 0)


		TellUs.Size = UDim2.new(0, 225, 0, 78)


		game:GetService('Debris'):AddItem(TellUs, 5)



		UICorner.CornerRadius = UDim.new(0, 25)


		UICorner.Parent = TellUs



		Title.Name = "Title"


		Title.Parent = TellUs


		Title.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


		Title.Position = UDim2.new(0.0530002154, 0, 0, 10)


		Title.Size = UDim2.new(0, 200, 0, 25)


		Title.Font = Enum.Font.Gotham


		Title.Text = "Right Control To Toggle UI"


		Title.TextColor3 = Color3.fromRGB(229, 229, 229)


		Title.TextSize = 14.000



		UICorner_2.CornerRadius = UDim.new(0, 25)


		UICorner_2.Parent = Title



		Button.Name = "Button"


		Button.Parent = TellUs


		Button.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


		Button.Position = UDim2.new(0.0529999994, 0, 0.381025642, 10)


		Button.Size = UDim2.new(0, 200, 0, 25)


		Button.Font = Enum.Font.SourceSans


		Button.Text = "OK"


		Button.TextColor3 = Color3.fromRGB(229, 229, 229)


		Button.TextSize = 19.000



		UICorner_3.CornerRadius = UDim.new(0, 25)


		UICorner_3.Parent = Button



		TellUs.Visible = true


		Button.MouseButton1Down:Connect(function()


			TellUs:Destroy()


		end)



	end



	Minimize.MouseButton1Click:Connect(function()


		if db == false then


			minimize()


		end


	end)



	local uhuh = true


	local dbb = false


	Subtract.MouseButton1Click:Connect(function()


		if dbb == false then


			dbb = true


			if uhuh == true then


				Clipp:TweenSize(UDim2.new(0,473,0,39),Enum.EasingDirection.In,Enum.EasingStyle.Sine,0.75)


				wait(0.75)


				Frameee.Visible = false


				uhuh = false


				dbb = false


			elseif uhuh == false then


				Clipp:TweenSize(UDim2.new(0, 473, 0, 240),Enum.EasingDirection.In,Enum.EasingStyle.Sine,0.75)


				Frameee.Visible = true


				wait(0.25)


				wait(0.75)


				uhuh = true


				dbb = false


			end


		end


	end)



	-- Functions



	local UserInputService = game:GetService("UserInputService")


	local runService = (game:GetService("RunService"));



	local gui = Clipp



	local dragging


	local dragInput


	local dragStart


	local startPos



	local function Lerp(a, b, m)


		return a + (b - a) * m


	end;



	local lastMousePos


	local lastGoalPos


	local DRAG_SPEED = (75); -- // The speed of the UI darg.


	local function Update(dt)


		if not (startPos) then return end;


		if not (dragging) and (lastGoalPos) then


			gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))


			return 


		end;



		local delta = (lastMousePos - UserInputService:GetMouseLocation())


		local xGoal = (startPos.X.Offset - delta.X);


		local yGoal = (startPos.Y.Offset - delta.Y);


		lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)


		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))


	end;



	gui.InputBegan:Connect(function(input)


		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then


			dragging = true


			dragStart = input.Position


			startPos = gui.Position


			lastMousePos = UserInputService:GetMouseLocation()



			input.Changed:Connect(function()


				if input.UserInputState == Enum.UserInputState.End then


					dragging = false


				end


			end)


		end


	end)



	gui.InputChanged:Connect(function(input)


		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then


			dragInput = input


		end


	end)



	runService.Heartbeat:Connect(Update)



	game:GetService('UserInputService').InputBegan:Connect(function(inp,GPE)


		if GPE == false and db == false then


			db = true


			if inp.KeyCode == Enum.KeyCode.RightControl then


				if showing == true then


					minimize()


					showing = false


				elseif showing == false then


					Clipp:TweenSize(UDim2.new(0, 473, 0, 238),Enum.EasingDirection.In,Enum.EasingStyle.Sine,0.75)


					if TellUs then


						TellUs:Destroy()


					end


					showing = true


				end


			end


			wait(0.75)


			db = false


		end


	end)



	local hasTab = false


	local tabs = 0



	-- Make Tabs



	function windowparams:CreateTab(tabparams)



		tabs += 1



		tabparams = tabparams or {}


		local name = tabparams.Name or 'Tab '..tabs



		local TabButton = Instance.new("TextButton")


		local UICornerTB = Instance.new("UICorner")


		local Tab = Instance.new("ScrollingFrame")


		local UIListLayout1 = Instance.new("UIListLayout")



		local v = Instance.new('StringValue')



		local UIListLayout = Instance.new("UIListLayout")



		UIListLayout.Parent = SideBar_3


		UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center


		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder


		UIListLayout.Padding = UDim.new(0,5)



		TabButton.Name = name.." Button"


		TabButton.Parent = SideBar_3


		TabButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


		TabButton.BackgroundTransparency = 1


		TabButton.BorderSizePixel = 0


		TabButton.Size = UDim2.new(0, 92, 0, 30)


		TabButton.Font = Enum.Font.Gotham


		TabButton.Text = name


		TabButton.TextColor3 = Color3.fromRGB(229, 229, 229)


		TabButton.TextSize = 14.000


		while TabButton.TextFits == false do


			TabButton.TextSize -= 0.1


		end



		v.Parent = TabButton


		v.Value = name



		UICornerTB.CornerRadius = UDim.new(0, 25)


		UICornerTB.Name = "UICornerTB"


		UICornerTB.Parent = TabButton



		Tab.Name = name..' Container'


		Tab.Parent = Tabs


		Tab.Active = true


		Tab.BackgroundColor3 = Color3.fromRGB(74, 74, 74)


		Tab.BackgroundTransparency = 1.000


		Tab.BorderSizePixel = 0


		Tab.Position = UDim2.new(0.0507462695, 0, 0.0656565651, 0)


		Tab.Size = UDim2.new(0, 298, 0, 170)


		Tab.CanvasSize = UDim2.new(0, 0, 5.5, 0)


		Tab.ScrollBarThickness = 7


		Tab.Visible = false



		UIListLayout1.Parent = Tab


		UIListLayout1.SortOrder = Enum.SortOrder.LayoutOrder


		UIListLayout1.Padding = UDim.new(0, 25)


		Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)



		-- Tab Button


		TabButton.MouseButton1Click:Connect(function()


			if _G.cTab == Tab then return end


			if not (_G.ctab == Tab) then


				_G.cTab = Tab


				for i,v in next, Tabs:GetChildren() do


					v.Visible = false


				end


				for i,v in next, SideBar_3:GetChildren() do


					if not (v:IsA('UICorner') or v:IsA('UIListLayout')) then


						TweenBackgroundTransparency(v, {Time = 0.5,Transparency = 1})


						v.Text = v.Value.Value


					end


				end


				TweenBackgroundTransparency(TabButton, {Time = 0.5,Transparency = 0.9})


				TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'     '


				local spaces = 5


				if TabButton.TextFits == false then


					spaces = 4


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'    '


					if TabButton.TextFits == false then


						spaces = 3


						TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'   '


						if TabButton.TextFits == false then


							spaces = 2


							TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'  '


							if TabButton.TextFits == false then


								spaces = 1


								TabButton.Text = (tabparams.Name or 'Tab '..tabs)..' '


								if TabButton.TextFits == false then


									spaces = 0


								end


							end


						end


					end


				end


				if spaces == 5 then


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..' '


					wait(0.025)


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'  '


					wait(0.025)


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'   '


					wait(0.025)


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'     '


				elseif spaces == 4 then


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..' '


					wait(0.025)


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'  '


					wait(0.025)


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'   '


					wait(0.025)


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'    '


				elseif spaces == 3 then


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..' '


					wait(0.025)


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'  '


					wait(0.025)


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'   '


				elseif spaces == 2 then


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..' '


					wait(0.025)


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'  '


				elseif spaces == 1 then


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..' '


				elseif spaces == 0 then


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)


				end


				Tab.Visible = true


			end


		end)



		if hasTab == false then


			hasTab = true


			_G.cTab = Tab


			TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'     '


			if TabButton.TextFits == false then


				TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'    '


				if TabButton.TextFits == false then


					TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'   '


					if TabButton.TextFits == false then


						TabButton.Text = (tabparams.Name or 'Tab '..tabs)..'  '


						if TabButton.TextFits == false then


							TabButton.Text = (tabparams.Name or 'Tab '..tabs)..' '


							if TabButton.TextFits == false then


								TabButton.Text = (tabparams.Name or 'Tab '..tabs)


							end


						end


					end


				end


			end


			TweenBackgroundTransparency(TabButton, {Time = 0.5,Transparency = 0.9})


			Tab.Visible = true


		end



		_G.InsideTab = {}



		-- Make Button


		function _G.InsideTab:CreateButton(buttonparams)


			buttonparams = buttonparams or {}


			name = buttonparams.Name or 'Button'


			local Callback = buttonparams.Callback or function() end


			-- Make Button UI Code



			local Button = Instance.new("Frame")


			local Button_2 = Instance.new("TextButton")


			local UICornerBB = Instance.new("UICorner")


			local UICornerB = Instance.new("UICorner")


			local ImageLabel = Instance.new("ImageButton")



			Button.Name = "Button"


			Button.Parent = Tab


			Button.BackgroundColor3 = Color3.fromRGB(74, 74, 74)


			Button.BorderSizePixel = 0


			Button.Position = UDim2.new(0, 0, 0.429411769, 0)


			Button.Size = UDim2.new(0, 240, 0, 45)



			Button_2.Name = "Button"


			Button_2.Parent = Button


			Button_2.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


			Button_2.BorderSizePixel = 0


			Button_2.Position = UDim2.new(0.0249999985, 0, 0.117857151, 0)


			Button_2.Size = UDim2.new(0, 181, 0, 35)


			Button_2.Font = Enum.Font.Gotham


			Button_2.Text = name


			Button_2.TextColor3 = Color3.fromRGB(229, 229, 229)


			Button_2.TextSize = 14.000



			while Button_2.TextFits == false do


				Button_2.TextSize -= 0.1


			end



			UICornerBB.CornerRadius = UDim.new(0, 12)


			UICornerBB.Name = "UICornerBB"


			UICornerBB.Parent = Button_2



			UICornerB.CornerRadius = UDim.new(0, 12)


			UICornerB.Name = "UICornerB"


			UICornerB.Parent = Button



			ImageLabel.Parent = Button


			ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


			ImageLabel.BackgroundTransparency = 1.000


			ImageLabel.BorderSizePixel = 0


			ImageLabel.Position = UDim2.new(0.790000021, 0, 0.180999994, 0)


			ImageLabel.Size = UDim2.new(0, 32, 0, 32)


			ImageLabel.Image = "rbxassetid://12469290594"


			ImageLabel.ImageColor3 = Color3.fromRGB(229, 229, 229)


			Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)








			Button_2.MouseButton1Click:Connect(function()


				pcall(Callback)


			end)


			ImageLabel.MouseButton1Click:Connect(function()


				pcall(Callback)


			end)



			function buttonparams:Update(param)


				param = param or {}


				name = param.Name or name


				Callback = param.Callback or Callback


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)






				Button_2.Text = name


			end






			function buttonparams:Destroy()


				Button:Destroy()


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


			end



			return buttonparams;


		end




		function _G.InsideTab:CreateToggle(toggleparams)


			-- Make Toggle UI Code


			toggleparams = toggleparams or {}


			name = toggleparams.Name or 'Toggle'


			local Callback = toggleparams.Callback or function() end



			local Toggle = Instance.new("Frame")


			local Toggle_2 = Instance.new("TextLabel")


			local UICorner_11 = Instance.new("UICorner")


			local UICorner_12 = Instance.new("UICorner")


			local TextButton = Instance.new("TextButton")


			local Background = Instance.new("TextLabel")


			local UICorner_13 = Instance.new("UICorner")


			local Ting = Instance.new("TextLabel")


			local UICorner_14 = Instance.new("UICorner")



			Toggle.Name = "Toggle"


			Toggle.Parent = Tab


			Toggle.BackgroundColor3 = Color3.fromRGB(74, 74, 74)


			Toggle.BorderSizePixel = 0


			Toggle.Position = UDim2.new(0, 0, 0.429411769, 0)


			Toggle.Size = UDim2.new(0, 240, 0, 45)



			Toggle_2.Name = "Toggle"


			Toggle_2.Parent = Toggle


			Toggle_2.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


			Toggle_2.BorderSizePixel = 0


			Toggle_2.Position = UDim2.new(0.0250000004, 0, 0.0900946707, 0)


			Toggle_2.Size = UDim2.new(0, 144, 0, 35)


			Toggle_2.Font = Enum.Font.Gotham


			Toggle_2.Text = name


			Toggle_2.TextColor3 = Color3.fromRGB(229, 229, 229)


			Toggle_2.TextSize = 14.000


			while Toggle_2.TextFits == false do


				Toggle_2.TextSize -= 0.1


			end



			UICorner_11.CornerRadius = UDim.new(0, 12)


			UICorner_11.Parent = Toggle_2



			UICorner_12.CornerRadius = UDim.new(0, 12)


			UICorner_12.Parent = Toggle



			TextButton.Parent = Toggle


			TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


			TextButton.BackgroundTransparency = 1.000


			TextButton.Position = UDim2.new(0.699166596, 0, 0.210000277, 0)


			TextButton.Size = UDim2.new(0, 53, 0, 23)


			TextButton.Font = Enum.Font.SourceSans


			TextButton.Text = ""


			TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)


			TextButton.TextSize = 1.000


			TextButton.TextTransparency = 1.000



			Background.Name = "Background"


			Background.Parent = Toggle


			Background.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


			Background.Position = UDim2.new(0.699999988, 0, 0.209999993, 0)


			Background.Size = UDim2.new(0, 51, 0, 22)


			Background.Font = Enum.Font.SourceSans


			Background.Text = ""


			Background.TextColor3 = Color3.fromRGB(0, 0, 0)


			Background.TextSize = 14.000



			UICorner_13.CornerRadius = UDim.new(0, 12)


			UICorner_13.Parent = Background



			Ting.Name = "Ting"


			Ting.Parent = Background


			Ting.BackgroundColor3 = Color3.fromRGB(229, 229, 229)


			Ting.Size = UDim2.new(0, 20, 0, 20)


			Ting.Position = UDim2.new(0, 0, 0, 1.6)


			Ting.ZIndex = 2


			Ting.Font = Enum.Font.SourceSans


			Ting.Text = ""


			Ting.TextColor3 = Color3.fromRGB(0, 0, 0)


			Ting.TextSize = 14.000



			UICorner_14.CornerRadius = UDim.new(0, 12)


			UICorner_14.Parent = Ting


			Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)




			local toggl = false


			local debounce = false






			TextButton.MouseButton1Click:Connect(function()


				if debounce == false then


					debounce = true


					if toggl == false then


						Ting:TweenPosition(UDim2.new(0.65, 0, 0, 1.6), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.85)


						toggl = true


						pcall(function()


							Callback(toggl)


						end)


						wait(0.9)


						debounce = false


					elseif toggl == true then


						Ting:TweenPosition(UDim2.new(0, 0, 0, 1.6), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.85)


						toggl = false


						pcall(function()


							Callback(toggl)


						end)


						wait(0.9)


						debounce = false


					end


				end


			end)


		end




		function _G.InsideTab:CreateLabel(labelparams)


			labelparams = labelparams or {}


			local text = labelparams.Text or 'Text'



			-- Make Label UI Code



			local Label_3 = Instance.new("Frame")


			local Label_4 = Instance.new("TextLabel")


			local UICorner_15 = Instance.new("UICorner")


			local UICorner_16 = Instance.new("UICorner")



			Label_3.Name = "Label"


			Label_3.Parent = Tab


			Label_3.BackgroundColor3 = Color3.fromRGB(74, 74, 74)


			Label_3.BorderSizePixel = 0


			Label_3.Position = UDim2.new(0, 0, 0.429411769, 0)


			Label_3.Size = UDim2.new(0, 240, 0, 45)



			Label_4.Name = "Label"


			Label_4.Parent = Label_3


			Label_4.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


			Label_4.BorderSizePixel = 0


			Label_4.Position = UDim2.new(0.0250000004, 0, 0.0900945142, 0)


			Label_4.Size = UDim2.new(0, 227, 0, 35)


			Label_4.Font = Enum.Font.Gotham


			Label_4.TextColor3 = Color3.fromRGB(229, 229, 229)


			Label_4.TextSize = 14.000


			Label_4.Text = text



			while Label_4.TextFits == false do


				Label_4.TextSize -= 0.1


			end



			UICorner_15.CornerRadius = UDim.new(0, 12)


			UICorner_15.Parent = Label_4



			UICorner_16.CornerRadius = UDim.new(0, 12)


			UICorner_16.Parent = Label_3


			Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)



			function labelparams:Update(param)


				param = param or {}


				name = param.Name or name


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)






				Label_4.Text = name


			end






			function labelparams:Destroy()


				Label_3:Destroy()


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


			end



			return labelparams;



		end




		function _G.InsideTab:CreateParagraph(paragraphparams)


			paragraphparams = paragraphparams or {}


			title = paragraphparams.Title or 'Paragraph'


			local text = paragraphparams.Text or 'Text'



			-- Make Paragraph UI Code



			local Paragraph = Instance.new("Frame")


			local Label = Instance.new("TextLabel")


			local UICorner = Instance.new("UICorner")


			local TextLabel = Instance.new("TextLabel")


			local UICorner_2 = Instance.new("UICorner")


			local UICorner_3 = Instance.new("UICorner")



			Paragraph.Name = "Paragraph"


			Paragraph.Parent = Tab


			Paragraph.BackgroundColor3 = Color3.fromRGB(74, 74, 74)


			Paragraph.BorderSizePixel = 0


			Paragraph.Position = UDim2.new(0, 0, -0.0742722452, 0)


			Paragraph.Size = UDim2.new(0, 240, 0, 106)



			UICorner_3.CornerRadius = UDim.new(0, 12)


			UICorner_3.Parent = Paragraph



			Label.Name = "Label"


			Label.Parent = Paragraph


			Label.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


			Label.BorderSizePixel = 0


			Label.Position = UDim2.new(0.108333334, 0, 0.0500000007, 0)


			Label.Size = UDim2.new(0, 181, 0, 21)


			Label.Font = Enum.Font.Gotham


			Label.Text = title


			Label.TextColor3 = Color3.fromRGB(229, 229, 229)


			Label.TextSize = 14.000



			while Label.TextFits == false do


				Label.TextSize -= 0.1


			end



			UICorner.CornerRadius = UDim.new(0, 12)


			UICorner.Parent = Label



			TextLabel.Parent = Paragraph


			TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


			TextLabel.BackgroundTransparency = 1.000


			TextLabel.Position = UDim2.new(0.0250000004, 0, 0.340000004, 0)


			TextLabel.Size = UDim2.new(0, 227, 0, 60)


			TextLabel.Font = Enum.Font.Gotham


			TextLabel.Text = text


			TextLabel.TextColor3 = Color3.fromRGB(229, 229, 229)


			TextLabel.TextSize = 14.000


			TextLabel.TextXAlignment = Enum.TextXAlignment.Left


			TextLabel.TextYAlignment = Enum.TextYAlignment.Top


			TextLabel.TextWrapped = true



			while TextLabel.TextFits == false do


				TextLabel.TextSize -= 0.1


			end



			UICorner_2.CornerRadius = UDim.new(0, 12)


			UICorner_2.Parent = TextLabel


			Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)



			function paragraphparams:Update(param)


				param = param or {}


				name = param.Name or name


				text = param.Text or text


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)






				Label.Text = name


				TextLabel.Text = text


			end






			function paragraphparams:Destroy()


				Paragraph:Destroy()


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


			end






			return paragraphparams;



		end




		function _G.InsideTab:CreateInput(inputparams)


			-- Make Input UI Code


			inputparams = inputparams or {}


			local Callback = inputparams.Callback or function() end


			local removetextafterfocuslost = inputparams.RemoveTextAfterFocusLost or false


			local placeholdertext = inputparams.PlaceHolderText or 'Type Here'


			local defualt = inputparams.Default or ''



			local Input = Instance.new("Frame")


			local TextBox = Instance.new("TextBox")


			local UICorner_9 = Instance.new("UICorner")


			local UICorner_10 = Instance.new("UICorner")


			local ImageLabel_2 = Instance.new("ImageLabel")



			Input.Name = "Input"


			Input.Parent = Tab


			Input.BackgroundColor3 = Color3.fromRGB(74, 74, 74)


			Input.BorderSizePixel = 0


			Input.Position = UDim2.new(0, 0, 0.180000037, 0)


			Input.Size = UDim2.new(0, 240, 0, 45)



			TextBox.Parent = Input


			TextBox.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


			TextBox.BorderSizePixel = 0


			TextBox.Position = UDim2.new(0.0250000004, 0, 0.0944444463, 0)


			TextBox.Size = UDim2.new(0, 181, 0, 35)


			TextBox.Font = Enum.Font.Gotham


			TextBox.PlaceholderText = placeholdertext


			TextBox.TextColor3 = Color3.fromRGB(229, 229, 229)


			TextBox.TextSize = 14.000


			TextBox.Text = defualt



			UICorner_9.CornerRadius = UDim.new(0, 12)


			UICorner_9.Parent = TextBox



			UICorner_10.CornerRadius = UDim.new(0, 12)


			UICorner_10.Parent = Input



			ImageLabel_2.Parent = Input


			ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


			ImageLabel_2.BackgroundTransparency = 1.000


			ImageLabel_2.BorderSizePixel = 0


			ImageLabel_2.Position = UDim2.new(0.790000021, 0, 0.180999994, 0)


			ImageLabel_2.Size = UDim2.new(0, 32, 0, 32)


			ImageLabel_2.Image = "rbxassetid://12469288703"


			ImageLabel_2.ImageColor3 = Color3.fromRGB(229, 229, 229)


			Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)




			TextBox.FocusLost:Connect(function()




				local Success, Response = pcall(function()


					Callback(TextBox.Text)


				end)


				


				pcall(function()


					Callback(TextBox.Text)


				end)



				if removetextafterfocuslost then


					TextBox.Text = ""


				end


			end)


		end




		function _G.InsideTab:CreateDropdown(dropdownparams)


			-- Make Dropdown Button and Frame code



			dropdownparams = dropdownparams or {}


			name = dropdownparams.Name or 'Dropdown'


			local options = dropdownparams.Options or {}


			local Callback = dropdownparams.Callback or function() end



			local Dropdown = Instance.new("Frame")


			local UICorner_24 = Instance.new("UICorner")


			local DropdownFrame = Instance.new("Frame")


			local UICorner_25 = Instance.new("UICorner")


			local Dropdownframe = Instance.new("ScrollingFrame")


			local UIListLayout_3 = Instance.new("UIListLayout")


			local UICorner_27 = Instance.new("UICorner")


			local BG_2 = Instance.new("Frame")


			local UICorner_28 = Instance.new("UICorner")


			local TextLabel_2 = Instance.new("TextLabel")


			local UICorner_29 = Instance.new("UICorner")


			local ImageLabel_5 = Instance.new("ImageLabel")


			local Open = Instance.new("TextButton")



			Dropdown.Name = "Dropdown"


			Dropdown.Parent = Tab


			Dropdown.BackgroundColor3 = Color3.fromRGB(74, 74, 74)


			Dropdown.BorderSizePixel = 0


			Dropdown.Position = UDim2.new(0, 0, -0.0314874984, 0)


			Dropdown.Size = UDim2.new(0, 240, 0, 100)



			UICorner_24.CornerRadius = UDim.new(0, 12)


			UICorner_24.Parent = Dropdown



			DropdownFrame.Name = "DropdownFrame"


			DropdownFrame.Parent = Dropdown


			DropdownFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)


			DropdownFrame.BorderSizePixel = 0


			DropdownFrame.ClipsDescendants = true


			DropdownFrame.Size = UDim2.new(0, 160, 0, 100)


			DropdownFrame.ZIndex = 9



			UICorner_25.CornerRadius = UDim.new(0, 12)


			UICorner_25.Parent = DropdownFrame



			Dropdownframe.Name = "Dropdownframe"


			Dropdownframe.Parent = DropdownFrame


			Dropdownframe.Active = true


			Dropdownframe.BackgroundColor3 = Color3.fromRGB(74, 74, 74)


			Dropdownframe.BackgroundTransparency = 1.000


			Dropdownframe.BorderSizePixel = 0


			Dropdownframe.Position = UDim2.new(0.0250001103, 0, 0, 6)


			Dropdownframe.Size = UDim2.new(0, 152, 0, 95)


			Dropdownframe.ZIndex = 1000000000


			Dropdownframe.ScrollBarThickness = 7



			UIListLayout_3.Parent = Dropdownframe


			UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder


			UIListLayout_3.Padding = UDim.new(0.00499999989, 3)



			UICorner_27.CornerRadius = UDim.new(0, 12)


			UICorner_27.Parent = Dropdownframe



			BG_2.Name = "BG"


			BG_2.Parent = Dropdown


			BG_2.BackgroundColor3 = Color3.fromRGB(74, 74, 74)


			BG_2.BackgroundTransparency = 1.000


			BG_2.BorderSizePixel = 0


			BG_2.Size = UDim2.new(0, 216, 0, 57)



			UICorner_28.CornerRadius = UDim.new(0, 12)


			UICorner_28.Parent = BG_2



			TextLabel_2.Parent = BG_2


			TextLabel_2.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


			TextLabel_2.Position = UDim2.new(0.0249999724, 0, 0.181000292, 0)


			TextLabel_2.Size = UDim2.new(0, 162, 0, 35)


			TextLabel_2.Font = Enum.Font.Gotham


			TextLabel_2.TextColor3 = Color3.fromRGB(229, 229, 229)


			TextLabel_2.TextSize = 14.000


			TextLabel_2.Text = name



			while TextLabel_2.TextFits == false do


				TextLabel_2.TextSize -= 0.1


			end



			UICorner_29.CornerRadius = UDim.new(0, 12)


			UICorner_29.Parent = TextLabel_2



			ImageLabel_5.Parent = BG_2


			ImageLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


			ImageLabel_5.BackgroundTransparency = 1.000


			ImageLabel_5.BorderSizePixel = 0


			ImageLabel_5.Position = UDim2.new(0.789907098, 0, 0.198543608, 0)


			ImageLabel_5.Size = UDim2.new(0, 32, 0, 32)


			ImageLabel_5.Image = "rbxassetid://12467246721"


			ImageLabel_5.ImageColor3 = Color3.fromRGB(229, 229, 229)



			Open.Name = "Open"


			Open.Parent = BG_2


			Open.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


			Open.BackgroundTransparency = 1.000


			Open.BorderSizePixel = 0


			Open.Position = UDim2.new(0.790000021, 0, 0.199000001, 0)


			Open.Size = UDim2.new(0, 32, 0, 32)


			Open.Font = Enum.Font.SourceSans


			Open.Text = ""


			Open.TextColor3 = Color3.fromRGB(0, 0, 0)


			Open.TextSize = 1.000


			Open.TextTransparency = 1.000


			Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)




			for i = 1, #options, 1 do


				-- Make Dropdown Options



				local Option = Instance.new("TextButton")


				local UICorner_26 = Instance.new("UICorner")



				Option.Name = "Option"


				Option.Parent = Dropdownframe


				Option.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


				Option.BorderSizePixel = 0


				Option.Size = UDim2.new(0, 119, 0, 35)


				Option.Font = Enum.Font.Gotham


				Option.Text = dropdownparams.Options[i]


				Option.TextColor3 = Color3.fromRGB(229, 229, 229)


				Option.TextSize = 14.000



				UICorner_26.CornerRadius = UDim.new(0, 12)


				UICorner_26.Parent = Option



				while Option.TextFits == false do


					Option.TextSize -= 0.1


				end



				local UIListLayout_3 = Instance.new("UIListLayout")



				UIListLayout_3.Parent = Dropdownframe


				UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder


				UIListLayout_3.Padding = UDim.new(0.00499999989, 3)



				Dropdownframe.CanvasSize = UDim2.new(0,0,0,#options*43.5-(#options/2))



				local value = dropdownparams.Options[i]






				Option.MouseButton1Click:Connect(function()


					local Success, Response = pcall(function()


						Callback(value)


					end)


				end)


			end



			local opened = false


			local debounce = false



			Dropdown.Size = UDim2.new(0, 240,0, 57)


			DropdownFrame.Size = UDim2.new(0, 160,0, 0)


			DropdownFrame.Visible = false



			Open.MouseButton1Down:Connect(function()


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


				if debounce == false then


					debounce = true


					if opened == false  then


						Dropdown:TweenSize(UDim2.new(0, 240,0, 100), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.5)


						DropdownFrame:TweenSize(UDim2.new(0, 160,0, 100), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.5)


						TextLabel_2.Visible = false


						DropdownFrame.Visible = true


						wait(0.7)


						debounce = false


						opened = true


						Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


					elseif opened == true then


						Dropdown:TweenSize(UDim2.new(0, 240,0, 57), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.5)


						DropdownFrame:TweenSize(UDim2.new(0, 160,0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.5)


						wait(0.5)


						TextLabel_2.Visible = true


						DropdownFrame.Visible = false


						wait(0.2)


						debounce = false


						opened = false


						Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


					end


				end


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)



			end)



			Open.MouseButton1Down:Connect(function()


				if debounce == false then


					for i = 0, 17, 1 do


						ImageLabel_5.Rotation += 10


						wait(0.00001)


					end


				end


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


			end)


			Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)



			function dropdownparams:Update(param)


				param = param or {}


				name = param.Name or name


				options = param.Options or options


				Callback = param.Callback or Callback


				local keepoldoptions = param.KeepOptions or true


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)






				TextLabel_2.Text = name






				for i,v in next, Dropdownframe:GetChildren() do


					if not v:IsA('UICorner') then


						if not v:IsA('UIListLayout') then


							v:Destroy()


							Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


						end


					end


				end






				for i = 1, #options, 1 do


					-- Make Dropdown Options


					Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


					


					if keepoldoptions == false then


						for i,v in next, Dropdownframe:GetChildren() do


							if not v:IsA('UICorner') then


								if not v:IsA('UIListLayout') then


									v:Destroy()


									Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


								end


							end


						end


					end



					local Option = Instance.new("TextButton")


					local UICorner_26 = Instance.new("UICorner")



					Option.Name = "Option"


					Option.Parent = Dropdownframe


					Option.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


					Option.BorderSizePixel = 0


					Option.Size = UDim2.new(0, 119, 0, 35)


					Option.Font = Enum.Font.Gotham


					Option.Text = param.Options[i]


					Option.TextColor3 = Color3.fromRGB(229, 229, 229)


					Option.TextSize = 14.000



					UICorner_26.CornerRadius = UDim.new(0, 12)


					UICorner_26.Parent = Option



					while Option.TextFits == false do


						Option.TextSize -= 0.1


					end



					local UIListLayout_3 = Instance.new("UIListLayout")



					UIListLayout_3.Parent = Dropdownframe


					UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder


					UIListLayout_3.Padding = UDim.new(0.00499999989, 3)



					Dropdownframe.CanvasSize = UDim2.new(0,0,0,#options*43.5-(#options/2))



					local value = param.Options[i]






					Option.MouseButton1Click:Connect(function()


						local Success, Response = pcall(function()


							Callback(value)


						end)


					end)


				end



			end






			function dropdownparams:Destroy()


				Dropdown:Destroy()


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


			end




			function dropdownparams:Clear()


				for i,v in next, Dropdownframe:GetChildren() do


					if not v:IsA('UICorner') then


						if not v:IsA('UIListLayout') then


							v:Destroy()


							Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


						end


					end


				end


			end




			function dropdownparams:Add(param)


				param = param or {}


				name = param.Name or 'Option'


				Callback = param.Callback or function() end


				-- Make Dropdown Options



				local Option = Instance.new("TextButton")


				local UICorner_26 = Instance.new("UICorner")



				Option.Name = "Option"


				Option.Parent = Dropdownframe


				Option.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


				Option.BorderSizePixel = 0


				Option.Size = UDim2.new(0, 119, 0, 35)


				Option.Font = Enum.Font.Gotham


				Option.Text = name


				Option.TextColor3 = Color3.fromRGB(229, 229, 229)


				Option.TextSize = 14.000



				UICorner_26.CornerRadius = UDim.new(0, 12)


				UICorner_26.Parent = Option



				while Option.TextFits == false do


					Option.TextSize -= 0.1


				end



				local UIListLayout_3 = Instance.new("UIListLayout")



				UIListLayout_3.Parent = Dropdownframe


				UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder


				UIListLayout_3.Padding = UDim.new(0.00499999989, 3)



				Dropdownframe.CanvasSize = UDim2.new(0,0,0,#options*43.5-(#options/2))



				local value = name






				Option.MouseButton1Click:Connect(function()


					local Success, Response = pcall(function()


						Callback(value)


					end)


				end)


			end




			function dropdownparams:Remove(name)


				for i,v in next, Dropdownframe:GetChildren() do


					if not v:IsA('UICorner') then


						if not v:IsA('UIListLayout') then


							if v.Name == name..' Option' then


								v:Destroy()


								Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


							end


						end


					end


				end


			end






			return dropdownparams;



		end



		function _G.InsideTab:CreateSlider(sliderparams)


			sliderparams = sliderparams or {}


			local minvalue = sliderparams.Min or 0


			local maxvalue = sliderparams.Max or 10


			local defualt = sliderparams.Defualt or minvalue


			name = sliderparams.Name or 'Slider'


			local Callback = sliderparams.Callback or function() end



			local Slider = Instance.new("Frame")


			local Label_2 = Instance.new("TextLabel")


			local UICorner_4 = Instance.new("UICorner")


			local Value = Instance.new("TextLabel")


			local UICorner_5 = Instance.new("UICorner")


			local SliderButton = Instance.new("ImageButton")


			local SliderInner = Instance.new("Frame")


			local UICorner_6 = Instance.new("UICorner")


			local UICorner_7 = Instance.new("UICorner")


			local UICorner_8 = Instance.new("UICorner")



			Slider.Name = "Slider"


			Slider.Parent = Tab


			Slider.BackgroundColor3 = Color3.fromRGB(74, 74, 74)


			Slider.BorderSizePixel = 0


			Slider.Position = UDim2.new(0, 0, 0.389411658, 0)


			Slider.Size = UDim2.new(0, 240, 0, 65)



			Label_2.Name = "Label"


			Label_2.Parent = Slider


			Label_2.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


			Label_2.BorderSizePixel = 0


			Label_2.Position = UDim2.new(0.0540000014, 0, 0.0700000003, 0)


			Label_2.Size = UDim2.new(0, 178, 0, 28)


			Label_2.Font = Enum.Font.Gotham


			Label_2.Text = name


			Label_2.TextColor3 = Color3.fromRGB(229, 229, 229)


			Label_2.TextSize = 14.000



			while Label_2.TextFits == false do


				Label_2.TextSize -= 0.1


			end



			UICorner_4.CornerRadius = UDim.new(0, 12)


			UICorner_4.Parent = Label_2



			Value.Name = "Value"


			Value.Parent = Slider


			Value.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


			Value.BorderSizePixel = 0


			Value.Position = UDim2.new(0.841666698, 0, 0.0700000003, 0)


			Value.Size = UDim2.new(0, 31, 0, 28)


			Value.Font = Enum.Font.Gotham


			Value.Text = "0"


			Value.TextColor3 = Color3.fromRGB(229, 229, 229)


			Value.TextSize = 14.000



			UICorner_5.CornerRadius = UDim.new(0, 12)


			UICorner_5.Parent = Value



			SliderButton.Name = "SliderButton"


			SliderButton.Parent = Slider


			SliderButton.BackgroundColor3 = Color3.fromRGB(84, 84, 84)


			SliderButton.BorderSizePixel = 0


			SliderButton.Position = UDim2.new(0.0250000004, 0, 0.584999979, 0)


			SliderButton.Size = UDim2.new(0, 221, 0, 19)


			SliderButton.ZIndex = 7


			SliderButton.ImageColor3 = Color3.fromRGB(147, 0, 10)


			SliderButton.ScaleType = Enum.ScaleType.Slice


			SliderButton.SliceScale = 0.050



			SliderInner.Name = "SliderInner"


			SliderInner.Parent = SliderButton


			SliderInner.BackgroundColor3 = Color3.fromRGB(116, 148, 235)


			SliderInner.BorderSizePixel = 0


			SliderInner.Size = UDim2.new(0, 0, 1, 0)


			SliderInner.ZIndex = 2



			UICorner_6.CornerRadius = UDim.new(0, 12)


			UICorner_6.Parent = SliderInner



			UICorner_7.CornerRadius = UDim.new(0, 12)


			UICorner_7.Parent = SliderButton



			UICorner_8.CornerRadius = UDim.new(0, 12)


			UICorner_8.Parent = Slider


			Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)



			-----Variables-----


			local mouse = game:GetService('Players').LocalPlayer:GetMouse()


			local uis = game:GetService("UserInputService")


			local value = defualt


			Value.Text = value


			local increment = 0.1


			


			repeat


				wait(0.1)


			until game:GetService('Players').LocalPlayer:WaitForChild("PlayerGui")


			pcall(function()


				Callback(value)


			end)



			SliderButton.MouseButton1Down:Connect(function()


				value = (math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / SliderButton.AbsoluteSize.X) * SliderInner.AbsoluteSize.X) + tonumber(minvalue))) or 0


				value = math.floor(value / increment + 0.5) * (increment * 10000000) / 10000000


				pcall(function()


					Callback(value)


				end)


				SliderInner.Size = UDim2.new(0, math.clamp(mouse.X - SliderInner.AbsolutePosition.X, 0, SliderButton.AbsoluteSize.X), 0, SliderButton.AbsoluteSize.Y)


				value = (math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / SliderButton.AbsoluteSize.X) * SliderInner.AbsoluteSize.X) + tonumber(minvalue))) or 0


				value = math.floor(value / increment + 0.5) * (increment * 10000000) / 10000000


				moveconnection = mouse.Move:Connect(function()


					Value.Text = value


					value = (math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / SliderButton.AbsoluteSize.X) * SliderInner.AbsoluteSize.X) + tonumber(minvalue)))


					value = math.floor(value / increment + 0.5) * (increment * 10000000) / 10000000


					pcall(function()


						Callback(value)


					end)


					SliderInner.Size = UDim2.new(0, math.clamp(mouse.X - SliderInner.AbsolutePosition.X, 0, SliderButton.AbsoluteSize.X), 0, SliderButton.AbsoluteSize.Y)


				end)


				releaseconnection = uis.InputEnded:Connect(function(Mouse)


					if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then


						value = (math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / SliderButton.AbsoluteSize.X) * SliderInner.AbsoluteSize.X) + tonumber(minvalue)))


						value = math.floor(value / increment + 0.5) * (increment * 10000000) / 10000000


						pcall(function()


							Callback(value)


						end)


						SliderInner.Size = UDim2.new(0, math.clamp(mouse.X - SliderInner.AbsolutePosition.X, 0, SliderButton.AbsoluteSize.X), 0, SliderButton.AbsoluteSize.Y)


						moveconnection:Disconnect()


						releaseconnection:Disconnect()


					end


				end)


			end)



			function sliderparams:Update(param)


				param = param or {}


				minvalue = param.Min or minvalue


				maxvalue = param.Max or maxvalue


				value = param.Value or value


				name = param.Name or name


				Callback = param.Callback or Callback


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)










				Label_2.Text = name


			end






			function sliderparams:Destroy()


				Slider:Destroy()


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


			end






			return sliderparams;



		end



		function _G.InsideTab:CreateWarning(warningparams)


			warningparams = warningparams or {}


			local text = warningparams.Text or 'Warning'



			local Warning = Instance.new("Frame")


			local Label_5 = Instance.new("TextLabel")


			local UICorner_17 = Instance.new("UICorner")


			local UICorner_18 = Instance.new("UICorner")


			local ImageLabel_3 = Instance.new("ImageLabel")



			Warning.Name = "Warning"


			Warning.Parent = Tab


			Warning.BackgroundColor3 = Color3.fromRGB(74, 74, 74)


			Warning.BorderSizePixel = 0


			Warning.Position = UDim2.new(0, 0, 0.429411769, 0)


			Warning.Size = UDim2.new(0, 240, 0, 45)



			Label_5.Name = "Label"


			Label_5.Parent = Warning


			Label_5.BackgroundColor3 = Color3.fromRGB(241, 194, 50)


			Label_5.BorderSizePixel = 0


			Label_5.Position = UDim2.new(0.158333331, 0, 0.0900946707, 0)


			Label_5.Size = UDim2.new(0, 195, 0, 35)


			Label_5.Font = Enum.Font.Gotham


			Label_5.TextColor3 = Color3.fromRGB(14, 14, 14)


			Label_5.TextSize = 14.000


			Label_5.Text = text



			while Label_5.TextFits == false do


				Label_5.TextSize -= 0.1


			end



			UICorner_17.CornerRadius = UDim.new(0, 12)


			UICorner_17.Parent = Label_5



			UICorner_18.CornerRadius = UDim.new(0, 12)


			UICorner_18.Parent = Warning



			ImageLabel_3.Parent = Warning


			ImageLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


			ImageLabel_3.BackgroundTransparency = 1.000


			ImageLabel_3.BorderSizePixel = 0


			ImageLabel_3.Position = UDim2.new(0.0250000004, 0, 0.111111112, 0)


			ImageLabel_3.Size = UDim2.new(0, 32, 0, 32)


			ImageLabel_3.Image = "rbxassetid://12469292646"


			ImageLabel_3.ImageColor3 = Color3.fromRGB(241, 194, 50)


			Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)



			function warningparams:Update(param)


				param = param or {}


				text = param.Text or text


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)






				Label_5.Text = name


			end






			function warningparams:Destroy()


				Warning:Destroy()


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


			end






			return warningparams;



		end



		function _G.InsideTab:CreateInfo(infoparams)


			infoparams = infoparams or {}


			local text = infoparams.Text or 'Info'



			local Info = Instance.new("Frame")


			local Label_7 = Instance.new("TextLabel")


			local UICorner_30 = Instance.new("UICorner")


			local UICorner_31 = Instance.new("UICorner")


			local ImageLabel_6 = Instance.new("ImageLabel")



			Info.Name = "Info"


			Info.Parent = Tab


			Info.BackgroundColor3 = Color3.fromRGB(74, 74, 74)


			Info.BorderSizePixel = 0


			Info.Position = UDim2.new(0, 0, 0.429411769, 0)


			Info.Size = UDim2.new(0, 240, 0, 45)



			Label_7.Name = "Label"


			Label_7.Parent = Info


			Label_7.BackgroundColor3 = Color3.fromRGB(45, 98, 241)


			Label_7.BorderSizePixel = 0


			Label_7.Position = UDim2.new(0.143027753, 0, 0.0900946707, 0)


			Label_7.Size = UDim2.new(0, 176, 0, 35)


			Label_7.Font = Enum.Font.Gotham


			Label_7.TextColor3 = Color3.fromRGB(14, 14, 14)


			Label_7.TextSize = 14.000


			Label_7.Text = text



			while Label_7.TextFits == false do


				Label_7.TextSize -= 0.5


			end



			UICorner_30.CornerRadius = UDim.new(0, 12)


			UICorner_30.Parent = Label_7



			UICorner_31.CornerRadius = UDim.new(0, 12)


			UICorner_31.Parent = Info



			ImageLabel_6.Parent = Info


			ImageLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)


			ImageLabel_6.BackgroundTransparency = 1.000


			ImageLabel_6.BorderSizePixel = 0


			ImageLabel_6.Position = UDim2.new(0.0250000004, 0, 0.111111112, 0)


			ImageLabel_6.Size = UDim2.new(0, 32, 0, 32)


			ImageLabel_6.Image = "rbxassetid://12469297177"


			ImageLabel_6.ImageColor3 = Color3.fromRGB(45, 98, 241)


			Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)



			function infoparams:Update(param)


				param = param or {}


				text = param.Text or text


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)






				Label_7.Text = name


			end






			function infoparams:Destroy()


				Info:Destroy()


				Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


			end



			return infoparams;



		end



		Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)



		function _G.InsideTab:Clear()


			for i,v in next, Tab:GetChildren() do


				if not v:IsA('UICorner') then


					if not v:IsA('UIListLayout') then


						v:Destroy()


						Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


					end


				end


			end


		end



		function _G.InsideTab:Destroy()


			Tab:Destroy()


			TabButton:Destroy()


			Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


		end


		


		runService.Heartbeat:Connect(function()


			Tab.CanvasSize = UDim2.new(0,0,0,UIListLayout1.AbsoluteContentSize.Y)


		end)



		return _G.InsideTab;




	end



	function windowparams:Destroy()


		UI:Destroy()


	end


	


	return windowparams;


	


end



function _G.MyLib:Notify(params)


	params = params or {}


	local title = params.Title or 'Notification'


	local text = params.Text or 'Notification'


	local tim = params.Time or 5


	local done = true


	


	local ArcNotificationFrame = game:GetService('Players').LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild('ArcNotifications'):FindFirstChild('ArcNotificationFrame')



	local aNotification = Notification:Clone()


	aNotification.Parent = ArcNotificationFrame


	local oNotification = aNotification:FindFirstChild('Notification_Frame')


	oNotification.Position = UDim2.new(1.5,0,0,0)


	oNotification:FindFirstChild('Title').Text = title


	oNotification:FindFirstChild('Text').Text = text


	


	oNotification:TweenPosition(UDim2.new(0,0,0,0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.5)


	wait(0.5)


	done = false


	


	oNotification:FindFirstChild('CloseNoti').MouseButton1Click:Connect(function()


		if done == false then


			done = true


			oNotification:TweenPosition(UDim2.new(1.5,0,0,0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.5)


			wait(0.5)


			aNotification:Destroy()


		end


	end)


	


	if done == false then


		wait(tim-1)


		oNotification:TweenPosition(UDim2.new(1.5,0,0,0), Enum.EasingDirection.In, Enum.EasingStyle.Sine, 0.5)


		wait(0.5)


		aNotification:Destroy()


	end



end



function _G.MyLib:CreateKeybind(keybindparams)


	keybindparams = keybindparams or {}


	local bind = Enum.KeyCode[keybindparams.Key] or nil


	local Callback = keybindparams.Callback or function() end



	local enabled = true


	local destroyed = false





	game:GetService("UserInputService").InputBegan:Connect(function(key,GPE)


		if GPE == false and bind ~= nil and enabled == true and destroyed == false then


			if key.KeyCode == bind then


				pcall(Callback)


			end


		end


	end)



	function keybindparams:Update(params)


		params = params or {}


		bind = Enum.KeyCode[params.Key] or Callback


		Callback = params.Callback or Callback



		enabled = params.Enabled or enabled


	end



	function keybindparams:Enable()


		enabled = true


	end



	function keybindparams:Disable()


		enabled = false


	end



	function keybindparams:Destroy()


		destroyed = true


	end



	return keybindparams;


end





return _G.MyLib;
